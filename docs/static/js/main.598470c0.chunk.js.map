{"version":3,"sources":["Components/AddCategory.jsx","helpers/getGifs.js","Components/GifGridItem.jsx","Components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","input","setInput","onSubmit","e","preventDefault","trim","length","catg","handleSubmit","className","type","value","onChange","target","handleChange","gifGet","category","a","url","encodeURI","fetch","res","json","data","gifs","map","d","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"qLAmCeA,EAhCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAClB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OACI,sBAAMC,SAAU,SAAAC,IAVC,SAACA,GAClBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAS,IACrBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAcO,OAChCN,EAAS,KAMOO,CAAaL,IAAjC,SACI,uBACIM,UAAU,YACVC,KAAK,OACLC,MAASX,EACTY,SAAY,SAAAT,GAAC,OAnBJ,SAACA,GAClBF,EAASE,EAAEU,OAAOF,OAkBKG,CAAaX,S,uBCvB/BY,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,gDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGZG,EAHY,gBAIGA,EAAIC,OAJP,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAI,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAEC,GACLC,MAAMF,EAAEE,MACRV,IAAG,UAACQ,EAAEG,cAAH,aAAC,EAAUC,iBAAiBZ,QAVrB,kBAaXM,GAbW,4CAAH,sDCYJO,EAVK,SAAC,GAAgB,IAAfH,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAEzB,OACI,sBAAKT,UAAU,6CAAf,UACI,qBAAKuB,IAAKd,EAAKe,IAAKL,IACpB,4BAAIA,QCmBDM,EAtBC,SAAC,GAAc,IAAblB,EAAY,EAAZA,SAEd,ECJwB,SAAEA,GAC1B,MAAyBjB,mBAAS,CAC9BwB,KAAK,GACLY,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAiBA,OAZAC,qBAAU,WAENvB,EAAOC,GACNuB,MAAK,SAAAC,GAAI,OAAEH,EAAS,CACjBd,KAAKiB,EACLL,SAAQ,SAGd,CAACnB,IAIIoB,EDdwBK,CAAazB,GAAhCa,EAAZ,EAAON,KAAaY,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKnB,IACJmB,GAAW,2CACZ,qBAAK1B,UAAU,YAAf,SACKoB,EAAOJ,KAAI,gBAAEE,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOV,EAAb,EAAaA,IAAb,OACR,cAAC,EAAD,CAEAU,MAASA,EACTV,IAAOA,GAFAS,QAMf,2BEMGe,EAzBI,WAEf,MAAkC3C,mBAAS,IAA3C,mBAAO4C,EAAP,KAAkB7C,EAAlB,KAMA,OACI,qCACI,0CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACK6C,EAAWlB,KAAI,SAACT,EAAS4B,GAAV,OACZ,cAAC,EAAD,CAEI5B,SAAUA,GADH4B,Y,MCd/BC,IAASC,OAEL,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.598470c0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories})=>{\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleChange = (e)=>{\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(input.trim().length > 2){\r\n            setCategories(catg => [input,...catg])\r\n            setInput('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={e=>{handleSubmit(e)}}>\r\n            <input \r\n                className='searchBar'\r\n                type=\"text\" \r\n                value = {input}\r\n                onChange = {e=>handleChange(e)}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\n\r\nexport const gifGet = async(category)=>{\r\n    //console.log(category)\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=o0HBO7HEDWCbmvIvy59MBvsi2bHLtmd3`\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n    \r\n    const gifs = data.map(d=>{\r\n        return {\r\n            id:d.id,\r\n            title:d.title,\r\n            url:d.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs\r\n};","import React from \"react\";\r\n\r\n\r\n\r\nconst GifGridItem = ({title, url})=>{\r\n   \r\n    return (\r\n        <div className='Card animate__animated animate__backInLeft'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import { gifGet } from \"../helpers/getGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\n\r\nconst GifGrid = ({category})=>{\r\n    \r\n    const {data:images, loading} = useFetchGifs(category)\r\n \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n            <div className='Card-Grid'>\r\n                {images.map(({id, title, url})=>\r\n                    <GifGridItem \r\n                    key = {id}\r\n                    title = {title}\r\n                    url = {url}\r\n                    /> \r\n                    )}\r\n            </div>\r\n            <hr/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\"\r\nimport { gifGet } from '../helpers/getGifs.js'\r\n\r\n\r\nexport const useFetchGifs = ( category )=>{\r\n    const [state,setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        gifGet(category)\r\n        .then(imgs=>setState({\r\n            data:imgs,\r\n            loading:false,\r\n        }))\r\n\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport GifGrid from \"./Components/GifGrid\";\r\n\r\nconst GifExpertApp=()=>{\r\n\r\n    const [categories,setCategories]= useState([])\r\n    \r\n    // const handleAdd = ()=>{\r\n    //     setCategories([...categories, 'Los Simpsons'])\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2>GiffiApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {categories.map((category,i)=>\r\n                    <GifGrid \r\n                        key = {i}\r\n                        category={category}\r\n                    />)}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n     document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}